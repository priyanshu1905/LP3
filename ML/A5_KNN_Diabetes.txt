A-5] KNN algorithm on diabetes.csv

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import StandardScaler
from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import confusion_matrix, f1_score, recall_score, precision_score,accuracy_score
-----------------------
df=pd.read_csv('diabetes.csv')
df.columns
----------------------
df.head()
----------------------
df.describe()
----------------------
df.isnull().sum()
----------------------
X=df.drop('Outcome',axis=1)
y=df['Outcome']
----------------------
from sklearn.preprocessing import scale
X=scale(X)
----------------------
#split into train test
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=42)
----------------------
knn=KNeighborsClassifier(n_neighbors=7)
knn.fit(X_train,y_train)
y_pred=knn.predict(X_test)
------------------------
print("Confusion matrix")
cs=confusion_matrix(y_test,y_pred)
print(cs)
------------------------
accuracy_score(y_test,y_pred)
------------------------
#The precision is the ratio of tp/(tp + fp)
precision_score(y_test,y_pred)
-------------------------
##The recall is the ratio of tp/(tp + fn)
recall_score(y_test,y_pred)
-------------------------
#error rate=1-accuracy which is lies bertween 0 and 1
error_rate=1-accuracy_score(y_test,y_pred)
--------------------------
error_rate
--------------------------
from sklearn import metrics
print("classification report ",metrics.classification_report(y_test,y_pred))
---------------------------