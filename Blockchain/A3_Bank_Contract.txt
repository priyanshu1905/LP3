// SPDX-License-Identifier: MIT 

pragma solidity ^0.8.11;
// 2nd BT 
contract TipJar {

    address owner;    // current owner of the contract
    mapping(address => uint) public balances;
    // function TipJar() public {
    //     owner = msg.sender;
    // }

    function withdraw(uint _amount) public{
        //we create a require arg to make sure the balance of the sender is >= _amount if not ERR
        require(balances[msg.sender]>= _amount, "Not enough ether");
        //if the amount is availabe we subtract it from the sender 
        balances[msg.sender] -= _amount;
        //True bool is called to confirm the amount
        (bool sent,) = msg.sender.call{value: _amount}("Sent");
        require(sent, "failed to send ETH");

        
    }
    function deposit(uint256 amount) public payable {
        require(msg.value == amount);
    }

    function getBalance() public view returns (uint256) {
        return address(this).balance;
    }
}
